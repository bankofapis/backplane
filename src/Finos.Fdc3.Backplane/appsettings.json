{
  /*
	  * SPDX-License-Identifier: Apache-2.0
	  * Copyright 2022 FINOS FDC3 contributors - see NOTICE file
	*/
  "PortsConfig": {
    "Ports": [ 4475, 4485, 4495, 4505, 4515, 4525, 4535, 4545, 4565, 4575 ] //recommended port range 4475 - 4575
  },
  "MultiHostConfig": {
    "MemberNodes": [
      //put your member nodes url here
      //example: http://host2:4475
      ""
    ]
  },
  //fdc3 recommended 8 User channels.
  "ChannelsConfig": {
    "UserChannels": [
      {
        "Id": "fdc3.channel.1",
        "Type": "User",
        "Name": "Channel 1",
        "Color": "red",
        "Glyph": "1"
      },
      {
        "Id": "fdc3.channel.2",
        "Type": "User",
        "Name": "Channel 2",
        "Color": "orange",
        "Glyph": "2"
      },
      {
        "Id": "fdc3.channel.3",
        "Type": "User",
        "Name": "Channel 3",
        "Color": "yellow",
        "Glyph": "3"
      },
      {
        "Id": "fdc3.channel.4",
        "Type": "User",
        "Name": "Channel 4",
        "Color": "green",
        "Glyph": "4"
      },
      {
        "Id": "fdc3.channel.5",
        "Type": "User",
        "Name": "Channel 5",
        "Color": "cyan",
        "Glyph": "5"
      },
      {
        "Id": "fdc3.channel.6",
        "Type": "User",
        "Name": "Channel 6",
        "Color": "blue",
        "Glyph": "6"
      },
      {
        "Id": "fdc3.channel.7",
        "Type": "User",
        "Name": "Channel 7",
        "Color": "magenta",
        "Glyph": "7"
      },
      {
        "Id": "fdc3.channel.8",
        "Type": "User",
        "Name": "Channel 8",
        "Color": "purple",
        "Glyph": "8"
      }
    ]
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Error",
      "System.Net.Http.HttpClient": "Error",
      "Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware": "None",
      "Microsoft.AspNetCore.SignalR": "Information"
    }
  },
  "AllowedHosts": "*",
  "ServiceName": "Finos.Fdc3.Backplane",
  //backplane endpoint. Empty value to expose websocket over hostname:port
  "HubEndpoint": "",
  //REST end point for member node to register itself with this node to form cluster
  "AddNodeEndpoint": "api/backplane/addmembernode",
  //REST end point to broadcast context to member backplane on other host machine
  "BroadcastEndpoint": "api/backplane/broadcast/context",
  //Interval in ms at which nodes would keep each other informed of their presence.
  "MemberNodesHealthCheckIntervalInMilliseconds": "3000",
  //Http request time-out
  "HttpRequestTimeoutInMilliseconds": "5000"
}
